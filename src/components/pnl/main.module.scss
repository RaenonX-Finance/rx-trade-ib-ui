@use "../../styles/colors";

div {
  @mixin section-base($suffix, $color) {
    @keyframes update-animation-#{$suffix} {
      from {
        box-shadow: inset 0 0 1rem $color;
      }

      to {
        box-shadow: unset;
      }
    }

    @keyframes update-animation-warning-#{$suffix} {
      from {
        box-shadow: inset 0 0 1rem white;
      }

      to {
        box-shadow: unset;
      }
    }

    animation: 1s update-animation-#{$suffix};
    border: 1px solid $color;
    border-radius: 0.5rem;
    color: $color;
    padding: 0.25rem 0.5rem;
    white-space: nowrap;

    &.section-warning {
      animation: 1s update-animation-warning-#{$suffix};
      background-color: colors.$color-down;
      color: white;
    }

    & * {
      flex-wrap: nowrap;
    }
  }

  @mixin px-section($side, $color) {
    &.px-section-#{$side} {
      @include section-base($side, $color);

      & .px-avg {
        font-size: 2rem;
        text-align: center;
      }

      & .px-diff-val {
        text-align: end;
      }
    }
  }

  @include px-section(up, colors.$color-up);
  @include px-section(down, colors.$color-down);
  @include px-section(neutral, colors.$color-neutral);

  @mixin realization($side, $color) {
    & .realization-#{$side} {
      text-align: end;
    }

    // Only apply color if not inherited from `section-warning`
    &:not(.section-warning) .realization-#{$side} {
      color: $color;
    }
  }

  @mixin summary-section($side, $color) {
    &.summary-section-#{$side} {
      @include section-base($side, $color);

      & .total-section {
        text-align: center;
        align-self: center;
        font-size: 1.5rem;
      }

      @include realization(up, colors.$color-up);
      @include realization(down, colors.$color-down);
      @include realization(neutral, colors.$color-neutral);
    }
  }

  @include summary-section(up, colors.$color-up);
  @include summary-section(down, colors.$color-down);
  @include summary-section(neutral, colors.$color-neutral);
}
